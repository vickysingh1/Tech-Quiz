/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techquizapp.gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import techquizapp.dao.PerformanceDao;
import techquizapp.dao.questionDao;
import techquizpojo.pojo.Answerpojo;
import techquizpojo.pojo.Answerstorepojo;
import techquizpojo.pojo.Exampojo;
import techquizpojo.pojo.Performancepojo;
import techquizpojo.pojo.QuestionStore;
import techquizpojo.pojo.Questionpojo;
import techquizpojo.pojo.userProfile;

/**
 *
 * @author Lenovo
 */
public class TakeTestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TakeTestFrame
     */
    private Exampojo exam;
    private QuestionStore qstore;
    private Answerstorepojo astore;
    private int qno=1, pos = 0;

    public TakeTestFrame() {
        initComponents();
        super.setLocationRelativeTo(null);
        usename.setText("Hello " + userProfile.getUsername());
        qstore = new QuestionStore();
        astore = new Answerstorepojo();
        
        lblQno.setText("Question no: " +qno);
    }

    TakeTestFrame(Exampojo exam) {
        this();
        this.exam = exam;
        lblTitle.setText(exam.getLanguage().toUpperCase() + " Paper");
        loadquestion();
        showQuestion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtquestion = new javax.swing.JTextArea();
        lblQno = new javax.swing.JLabel();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption2 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        btnNext = new javax.swing.JButton();
        btnpre = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        btndone = new javax.swing.JButton();
        usename = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        lblTitle.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));

        txtquestion.setColumns(20);
        txtquestion.setRows(5);
        jScrollPane1.setViewportView(txtquestion);

        lblQno.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        lblQno.setForeground(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(jrOption1);
        jrOption1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jrOption1.setForeground(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(jrOption2);
        jrOption2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jrOption2.setForeground(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(jrOption3);
        jrOption3.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jrOption3.setForeground(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(jrOption4);
        jrOption4.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jrOption4.setForeground(new java.awt.Color(255, 255, 255));

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnpre.setText("Previous");
        btnpre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreActionPerformed(evt);
            }
        });

        btncancel.setText("Cancel");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        btndone.setText("Done");
        btndone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnpre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btncancel)
                        .addGap(154, 154, 154)
                        .addComponent(btndone))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jrOption1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jrOption3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(149, 149, 149)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jrOption2, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(jrOption4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lblQno, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usename, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(usename)
                        .addGap(230, 230, 230)
                        .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, 89)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption1)
                    .addComponent(jrOption2))
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption3)
                    .addComponent(jrOption4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnpre)
                    .addComponent(btncancel)
                    .addComponent(btndone))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer!= null) {
            Questionpojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectanswer();
            Answerpojo newanswer = new Answerpojo(exam.getExamid(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            Answerpojo answer = astore.getAnswerBYQno(qno);
            
            if (answer == null) {
                astore.addAnswer(newanswer);
            } else {
                if (newanswer.getChosenAnswer().equals(answer.getChosenAnswer()) == false) {

                    int apos = astore.removeAnswers(answer);
                    astore.setAnswerAt(apos, newanswer);

                }
            }
        }
        pos++;
        if (pos >= qstore.getCount()) {
            pos = 0;
        }

        qno++;
        if (qno > qstore.getCount()) {
            qno = 1;

        }
        lblQno.setText("Question no:" + qno);
        showQuestion();


    }//GEN-LAST:event_btnNextActionPerformed

    private void btnpreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null) {
            Questionpojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectanswer();
            Answerpojo newanswer = new Answerpojo(exam.getExamid(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            Answerpojo answer = astore.getAnswerBYQno(qno);
            if (answer == null) {
                astore.addAnswer(newanswer);
            } else {
                if (newanswer.getChosenAnswer().equals(answer.getChosenAnswer()) == false) {

                    int apos = astore.removeAnswers(answer);
                    astore.setAnswerAt(apos, newanswer);

                }
            }
        }
        pos--;
        if (pos < 0) {
            pos = qstore.getCount() - 1;
        }

        qno--;
        if (qno <= 0) {
            qno = qstore.getCount();
        }
        lblQno.setText("Question no:" + qno);
        showQuestion();


    }//GEN-LAST:event_btnpreActionPerformed

    private void btndoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndoneActionPerformed
        // TODO add your handling code here:
        String userAnswer = getUserAnswer();
        if (userAnswer != null) {
            Questionpojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectanswer();
            Answerpojo newanswer = new Answerpojo(exam.getExamid(),exam.getLanguage(),qno,userAnswer,correctAnswer);
            Answerpojo answer = astore.getAnswerBYQno(qno);
            if (answer == null) {
                astore.addAnswer(newanswer);
            } else {
                if (newanswer.getChosenAnswer().equals(answer.getChosenAnswer()) == false) {
                    int apos = astore.removeAnswers(answer);
                    astore.setAnswerAt(apos, newanswer);
                }
            }
        }
        int right = 0, wrong = 0;
        for (Questionpojo question : qstore.getAllQuestion()) {
            int qno = question.getQno();
            Answerpojo answer = astore.getAnswerBYQno(qno);
            if (answer == null) {
                 continue;
            } else {
                String chosenans = answer.getChosenAnswer();
                String correctAnswer = answer.getCorrectAnswer();
                if (chosenans.equals(correctAnswer)) {
                    ++right;
                } else {
                    ++wrong;
                }
            }
        }
        String reportCard = "Total Question:" + qstore.getCount();
        reportCard += "\nRight Answer:" + right;
        reportCard += "\nWrong Answer:" + wrong;
        reportCard += "\nUnattempted questins:" +(qstore.getCount()-(right + wrong));
        JOptionPane.showMessageDialog(null, reportCard, "your result!", JOptionPane.INFORMATION_MESSAGE);
        try {
            Performancepojo performance = new Performancepojo(exam.getExamid(), exam.getLanguage(), userProfile.getUsername(), right, wrong, (qstore.getCount() - (right + wrong)), (right / qstore.getCount() * 100));

            PerformanceDao.addPerformance(performance);
            JOptionPane.showMessageDialog(null, "data saved successfully");
        } catch (Exception exz) {
            exz.printStackTrace();
            JOptionPane.showMessageDialog(null, "Exception is" + exz);
        }
    }//GEN-LAST:event_btndoneActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        // TODO add your handling code here:
                StudentOptionFrame paperFrame=new StudentOptionFrame();
        paperFrame.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btncancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btndone;
    private javax.swing.JButton btnpre;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtquestion;
    private javax.swing.JLabel usename;
    // End of variables declaration//GEN-END:variables

    public void loadquestion() {
        try {
            ArrayList<Questionpojo> questionlist = questionDao.getQuestionsByExamid(exam.getExamid());
            
                for (Questionpojo obj : questionlist) {
                    
                    qstore.addQuestion(obj);
                }
            
        } catch (Exception exz) {
            exz.printStackTrace();
            JOptionPane.showMessageDialog(null, "db not connecting");
        }
    }

    public void showQuestion() {
        Questionpojo question = qstore.getQuestion(pos);
        buttonGroup1.clearSelection();
        txtquestion.setText(question.getQuestion());
        jrOption1.setText(question.getAnswer1());
        jrOption2.setText(question.getAnswer2());
        jrOption3.setText(question.getAnswer3());
        jrOption4.setText(question.getAnswer4());
        Answerpojo answer = astore.getAnswerBYQno(qno);
        if (answer == null) {
            return;
        }

        String chosenAnswers = answer.getChosenAnswer();
        switch (chosenAnswers) {
            case "Answer1":
                jrOption1.setSelected(true);
                break;
            case "Answer2":
                jrOption2.setSelected(true);
                break;
            case "Answer3":
                jrOption3.setSelected(true);
                break;
            case "Answer4":
                jrOption4.setSelected(true);
                break;
        }

    }

    public String getUserAnswer() {
        if (jrOption1.isSelected()) {
                   return "Answer1";
        } else if (jrOption2.isSelected()) {
                    return "Answer2";
        } else if (jrOption3.isSelected()) {
                    return "Answer3";
        } else if (jrOption4.isSelected()) {
                    return "Answer4";
        } else {
                     return null;
        }
    }

}
